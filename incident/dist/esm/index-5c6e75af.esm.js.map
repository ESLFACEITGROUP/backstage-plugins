{"version":3,"file":"index-5c6e75af.esm.js","sources":["../../src/config.ts","../../src/components/IncidentListItem/index.tsx","../../src/components/EntityIncidentCard/index.tsx"],"sourcesContent":["/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ConfigApi } from '@backstage/core-plugin-api';\n\n// Find the baseUrl of the incident dashboard.\nexport function getBaseUrl(config: ConfigApi) {\n  try {\n    const baseUrl = config.getString('incident.baseUrl');\n    if (baseUrl !== '') {\n      return baseUrl;\n    }\n  } catch (e) {\n    // no action\n  }\n\n  return 'https://app.incident.io';\n}\n","/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { DateTime, Duration } from 'luxon';\nimport { BackstageTheme } from '@backstage/theme';\nimport {\n  Chip,\n  IconButton,\n  ListItem,\n  ListItemSecondaryAction,\n  ListItemText,\n  Tooltip,\n  Typography,\n  makeStyles,\n} from '@material-ui/core';\nimport OpenInBrowserIcon from '@material-ui/icons/OpenInBrowser';\nimport React from 'react';\nimport { definitions } from '../../api/types';\n\nconst useStyles = makeStyles<BackstageTheme>(theme => ({\n  listItemPrimary: {\n    display: 'flex', // vertically align with chip\n    fontWeight: 'bold',\n  },\n  warning: {\n    borderColor: theme.palette.status.warning,\n    color: theme.palette.status.warning,\n    '& *': {\n      color: theme.palette.status.warning,\n    },\n  },\n  error: {\n    borderColor: theme.palette.status.error,\n    color: theme.palette.status.error,\n    '& *': {\n      color: theme.palette.status.error,\n    },\n  },\n}));\n\n// Single item in the list of on-going incidents.\nexport const IncidentListItem = ({\n  baseUrl,\n  incident,\n}: {\n  baseUrl: string;\n  incident: definitions['IncidentV2ResponseBody'];\n}) => {\n  const classes = useStyles();\n  const reportedAt = incident.incident_timestamp_values?.find(ts =>\n    ts.incident_timestamp.name.match(/reported/i),\n  );\n\n  // If reported isn't here for some reason, use created at.\n  const reportedAtDate = reportedAt?.value?.value || incident.created_at;\n\n  const sinceReported =\n    new Date().getTime() - new Date(reportedAtDate).getTime();\n  const sinceReportedLabel = DateTime.local()\n    .minus(Duration.fromMillis(sinceReported))\n    .toRelative({ locale: 'en' });\n  const lead = incident.incident_role_assignments.find(roleAssignment => {\n    return roleAssignment.role.role_type === 'lead';\n  });\n\n  return (\n    <ListItem dense key={incident.id}>\n      <ListItemText\n        primary={\n          <>\n            <Chip\n              data-testid={`chip-${incident.incident_status.id}`}\n              label={incident.incident_status.name}\n              size=\"small\"\n              variant=\"outlined\"\n              className={\n                ['live'].includes(incident.incident_status.category)\n                  ? classes.error\n                  : classes.warning\n              }\n            />\n            {incident.reference} {incident.name}\n          </>\n        }\n        primaryTypographyProps={{\n          variant: 'body1',\n          className: classes.listItemPrimary,\n        }}\n        secondary={\n          <Typography noWrap variant=\"body2\" color=\"textSecondary\">\n            Reported {sinceReportedLabel} and{' '}\n            {lead?.assignee\n              ? `${lead.assignee.name} is lead`\n              : 'the lead is unassigned'}\n            .\n          </Typography>\n        }\n      />\n      <ListItemSecondaryAction>\n        <Tooltip title=\"View in incident.io\" placement=\"top\">\n          <IconButton\n            href={`${baseUrl}/incidents/${incident.id}`}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            color=\"primary\"\n          >\n            <OpenInBrowserIcon />\n          </IconButton>\n        </Tooltip>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n","/*\n * Copyright 2023 The Backstage Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Entity } from '@backstage/catalog-model';\nimport {\n  HeaderIconLinkRow,\n  IconLinkVerticalProps,\n  Progress,\n} from '@backstage/core-components';\nimport { ConfigApi, configApiRef, useApi } from '@backstage/core-plugin-api';\nimport { useEntity } from '@backstage/plugin-catalog-react';\nimport {\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  IconButton,\n  List,\n  Typography,\n} from '@material-ui/core';\nimport Link from '@material-ui/core/Link';\nimport CachedIcon from '@material-ui/icons/Cached';\nimport HistoryIcon from '@material-ui/icons/History';\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\nimport { Alert } from '@material-ui/lab';\nimport React, { useState } from 'react';\nimport { useAsync } from 'react-use';\nimport { IncidentApiRef } from '../../api/client';\nimport { definitions } from '../../api/types';\nimport { getBaseUrl } from '../../config';\nimport { IncidentListItem } from '../IncidentListItem';\n\n// The card displayed on the entity page showing a handful of the most recent\n// incidents that are on-going for that component.\nexport const EntityIncidentCard = ({\n  maxIncidents = 2,\n}: {\n  maxIncidents?: number;\n}) => {\n  const config = useApi(configApiRef);\n  const baseUrl = getBaseUrl(config);\n  const { entity } = useEntity();\n\n  const IncidentApi = useApi(IncidentApiRef);\n\n  const [reload, setReload] = useState(false);\n\n  const entityFieldID = getEntityFieldID(config, entity);\n  const entityID = `${entity.metadata.namespace}/${entity.metadata.name}`;\n\n  // This query filters incidents for those that are associated with this\n  // entity.\n  const query = new URLSearchParams();\n  query.set(`custom_field[${entityFieldID}][one_of]`, entityID);\n\n  // This restricts the previous filter to focus only on live incidents.\n  const queryLive = new URLSearchParams(query);\n  queryLive.set(`status_category[one_of]`, 'live');\n\n  const createIncidentLink: IconLinkVerticalProps = {\n    label: 'Create incident',\n    disabled: false,\n    icon: <WhatshotIcon />,\n    href: `${baseUrl}/incidents/create`,\n  };\n\n  const viewIncidentsLink: IconLinkVerticalProps = {\n    label: 'View past incidents',\n    disabled: false,\n    icon: <HistoryIcon />,\n    href: `${baseUrl}/incidents?${query.toString()}`,\n  };\n\n  const {\n    value: incidentsResponse,\n    loading: incidentsLoading,\n    error: incidentsError,\n  } = useAsync(async () => {\n    return await IncidentApi.request<\n      definitions['IncidentsV2ListResponseBody']\n    >({\n      path: `/v2/incidents?${queryLive.toString()}`,\n    });\n  }, [reload]);\n\n  const incidents = incidentsResponse?.incidents;\n\n  return (\n    <Card>\n      <CardHeader\n        title=\"Incidents\"\n        action={\n          <>\n            <IconButton\n              component={Link}\n              aria-label=\"Refresh\"\n              disabled={false}\n              title=\"Refresh\"\n              onClick={() => setReload(!reload)}\n            >\n              <CachedIcon />\n            </IconButton>\n          </>\n        }\n        subheader={\n          <HeaderIconLinkRow links={[createIncidentLink, viewIncidentsLink]} />\n        }\n      />\n      <Divider />\n      <CardContent>\n        {incidentsLoading && <Progress />}\n        {incidentsError && (\n          <Alert severity=\"error\">{incidentsError.message}</Alert>\n        )}\n        {!incidentsLoading && !incidentsError && incidents && (\n          <>\n            {incidents && incidents.length >= 0 && (\n              <Typography variant=\"subtitle1\">\n                There are <strong>{incidents.length}</strong> ongoing incidents\n                involving <strong>{entity.metadata.name}</strong>.\n              </Typography>\n            )}\n            {incidents && incidents.length === 0 && (\n              <Typography variant=\"subtitle1\">No ongoing incidents.</Typography>\n            )}\n            <List dense>\n              {incidents?.slice(0, maxIncidents)?.map(incident => {\n                return (\n                  <IncidentListItem\n                    key={incident.id}\n                    incident={incident}\n                    baseUrl={baseUrl}\n                  />\n                );\n              })}\n            </List>\n            <Typography variant=\"subtitle1\">\n              Click to{' '}\n              <Link\n                target=\"_blank\"\n                href={`${baseUrl}/incidents?${queryLive.toString()}`}\n              >\n                see more.\n              </Link>\n            </Typography>\n          </>\n        )}\n      </CardContent>\n    </Card>\n  );\n};\n\n// Find the ID of the custom field in incident that represents the association\n// to this type of entity.\n//\n// In practice, this will be kind=Component => ID of Affected components field.\nfunction getEntityFieldID(config: ConfigApi, entity: Entity) {\n  switch (entity.kind) {\n    case 'API':\n      return config.get('incident.fields.api');\n    case 'Component':\n      return config.get('incident.fields.component');\n    case 'Domain':\n      return config.get('incident.fields.domain');\n    case 'System':\n      return config.get('incident.fields.system');\n    default:\n      throw new Error(`unrecognised entity kind: ${entity.kind}`);\n  }\n}\n"],"names":[],"mappings":"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"}